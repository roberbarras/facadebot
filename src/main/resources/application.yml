server:
  port: ${PORT:8090}
logging:
  level:
    root: off
    org:
      telegram:
        bot:
          facadebot: debug
cloudkarafka:
  topic:
    receivemessage: '${CLOUDKARAFKA_USERNAME}-org.telegram.bot.receivemessage'
    sendmessage: '${CLOUDKARAFKA_USERNAME}-org.telegram.bot.sendmessage'
spring:
  kafka:
    bootstrap-servers: ${CLOUDKARAFKA_BROKERS}
    consumer:
      auto-offset-reset: latest
      group-id: ${CLOUDKARAFKA_USERNAME}-consumers
      properties:
        spring:
          json:
            trusted:
              packages: sample.kafka
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    properties:
      sasl:
        jaas:
          config: org.apache.kafka.common.security.scram.ScramLoginModule
            required username="${CLOUDKARAFKA_USERNAME}" password="${CLOUDKARAFKA_PASSWORD}";
        mechanism: SCRAM-SHA-256
      security:
        protocol: SASL_SSL
